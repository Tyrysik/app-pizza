{"version":3,"sources":["Pizza/IMG/1.jpeg","Menu Pizza/IMG/1.jpeg","logo.svg","Navigation/Nav.js","Pizza/Pizza.js","Menu Pizza/Paeroni.js","Footer/Footer.js","Menu Pizza/Margherita.js","Menu Pizza/Marinara.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","to","href","id","type","placeholder","Pizza","src","require","width","class","items","Paperoni","Footer","Margherita","Marinara","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,6ECA3CD,EAAOC,QAAU,IAA0B,kC,yMCmB5BC,MAff,WACI,OACA,yBAAKC,UAAY,OACb,yBAAKA,UAAU,QACX,yBAAKA,UAAY,SACb,kBAAC,IAAD,CAASC,GAAK,KAAd,QACA,uBAAGC,KAAO,KAAV,aACA,uBAAGA,KAAO,IAAIC,GAAK,SAAnB,WACA,uBAAGD,KAAM,IAAIC,GAAK,QAAlB,QACA,2BAAOC,KAAO,OAAOJ,UAAW,QAAQK,YAAc,iB,MCevDC,MAxBf,WACI,OACI,yBAAKN,UAAY,YACb,yBAAKA,UAAY,QACb,yBAAKA,UAAY,UAAUO,IAAKC,EAAQ,IAAiBC,MAAQ,UACjE,kBAAC,IAAD,CAASC,MAAQ,UAAUC,OAAK,EAACV,GAAK,aAAtC,mBACA,uBAAGD,UAAY,SAAf,SACA,4BAAQA,UAAY,OAApB,eAEJ,yBAAKA,UAAY,QACb,yBAAKA,UAAY,UAAUO,IAAKC,EAAQ,IAAiBC,MAAQ,UACjE,kBAAC,IAAD,CAASC,MAAQ,UAAUC,OAAK,EAACV,GAAK,eAAtC,sBACA,uBAAGD,UAAY,SAAf,SACA,4BAAQA,UAAY,OAApB,eAEJ,yBAAKA,UAAY,QACb,yBAAKA,UAAY,UAAUO,IAAKC,EAAQ,IAAiBC,MAAQ,UACjE,kBAAC,IAAD,CAASC,MAAQ,UAAUC,OAAK,EAACV,GAAK,aAAtC,kBACA,uBAAGD,UAAY,SAAf,UACA,4BAAQA,UAAY,OAApB,iB,aCNDY,MAdf,WACI,OACI,yBAAKZ,UAAY,WACb,yBAAKA,UAAY,aACb,yBAAKA,UAAY,cAAcO,IAAKC,EAAQ,IAAiBC,MAAQ,WAEzE,yBAAKT,UAAY,gBACb,8CACA,kUACA,4BAAQA,UAAY,UAApB,a,MCHDa,MAPf,WACI,OACI,yBAAKb,UAAY,UACb,2DCWGc,MAdf,WACI,OACI,yBAAKd,UAAY,WACjB,yBAAKA,UAAY,aACb,yBAAKA,UAAY,cAAcO,IAAKC,EAAQ,IAAiBC,MAAQ,WAEzE,yBAAKT,UAAY,gBACb,gDACA,kUACA,4BAAQA,UAAY,UAApB,aCKGe,MAdf,WACI,OACI,yBAAKf,UAAY,WACjB,yBAAKA,UAAY,aACb,yBAAKA,UAAY,cAAcO,IAAKC,EAAQ,IAAiBC,MAAQ,WAEzE,yBAAKT,UAAY,gBACb,8CACA,kUACA,4BAAQA,UAAY,UAApB,aCeGgB,MAff,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWb,IACjC,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,YAAYC,UAAWP,IACzC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,cAAcC,UAAWL,IAC3C,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,YAAYC,UAAWJ,IACzC,kBAAC,EAAD,SCRYK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.89bfc033.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.e8f60350.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/1.e8f60350.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './Nav.css'\nimport { NavLink } from 'react-router-dom'\n\nfunction Navigation(){\n    return(\n    <div className = \"nav\">\n        <div className=\"menu\">\n            <div className = \"items\">\n                <NavLink to = \"/\">Home</NavLink>\n                <a href = \"#\"> Contact </a>\n                <a href = \"#\" id = \"login\"> Login </a>\n                <a href =\"#\" id = \"cart\">Cart</a>\n                <input type = \"text\" className =\"Serch\" placeholder = \"Serch...\"></input>\n            </div>\n        </div>\n    </div>\n    )\n}\nexport default Navigation;","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport './Pizza.css'\n\nfunction Pizza(){\n    return(\n        <div className = \"ItemShop\">\n            <div className = \"item\">\n                <img className = \"itemImg\" src={require('./IMG/1.jpeg')} width = \"200px\"/>\n                <NavLink class = \"navItem\" items to = \"/paperoni\" >Papperoni Pizza</NavLink>\n                <a className = \"price\">3.00$</a>\n                <button className = \"btn\"> Buy now! </button>\n            </div>\n            <div className = \"item\">\n                <img className = \"itemImg\" src={require('./IMG/1.jpeg')} width = \"200px\"/>\n                <NavLink class = \"navItem\" items to = \"/margherita\" > Margherita Pizza </NavLink>\n                <a className = \"price\">4.99$</a>\n                <button className = \"btn\"> Buy now! </button>\n            </div>\n            <div className = \"item\">\n                <img className = \"itemImg\" src={require('./IMG/1.jpeg')} width = \"200px\"/>\n                <NavLink class = \"navItem\" items to = \"/marinara\" >Marinara Pizza</NavLink>\n                <a className = \"price\">20.00$</a>\n                <button className = \"btn\"> Buy now! </button>\n            </div>\n        </div>\n    )\n}\nexport default Pizza;","import React from 'react';\nimport './Paperoni.css'\n\nfunction Paperoni(){\n    return(\n        <div className = \"wrapper\">\n            <div className = \"PizzaItem\">\n                <img className = \"ImgPaperoni\" src={require('./IMG/1.jpeg')} width = \"800px\"/>\n            </div>\n            <div className = \"contentPizza\">\n                <h1>Paperoni Pizza</h1>\n                <p> Proident dolor sunt fugiat eiusmod Lorem. Aliquip sint labore dolore non aliquip anim id labore fugiat consectetur. Aliqua in laborum laboris fugiat esse amet nostrud deserunt non pariatur aliquip. Irure velit deserunt ipsum tempor cupidatat enim consectetur aliquip duis laboris consequat.</p>\n                <button className = \"btnbuy\"> Buy! </button>\n            </div>\n        </div>\n    )\n}\nexport default Paperoni","import React from 'react';\nimport './Footer.css'\nfunction Footer(){\n    return(\n        <div className = \"footer\">\n            <p> Site by Taras Lytvtnskiy </p>\n        </div>\n    )\n}\nexport default Footer","import React from \"react\";\n\nfunction Margherita(){\n    return(\n        <div className = \"wrapper\">\n        <div className = \"PizzaItem\">\n            <img className = \"ImgPaperoni\" src={require('./IMG/1.jpeg')} width = \"800px\"/>\n        </div>\n        <div className = \"contentPizza\">\n            <h1>Margherita Pizza</h1>\n            <p> Proident dolor sunt fugiat eiusmod Lorem. Aliquip sint labore dolore non aliquip anim id labore fugiat consectetur. Aliqua in laborum laboris fugiat esse amet nostrud deserunt non pariatur aliquip. Irure velit deserunt ipsum tempor cupidatat enim consectetur aliquip duis laboris consequat.</p>\n            <button className = \"btnbuy\"> Buy! </button>\n        </div>\n    </div>\n    )\n}\nexport default Margherita","import React from 'react'\n\nfunction Marinara(){\n    return(\n        <div className = \"wrapper\">\n        <div className = \"PizzaItem\">\n            <img className = \"ImgPaperoni\" src={require('./IMG/1.jpeg')} width = \"800px\"/>\n        </div>\n        <div className = \"contentPizza\">\n            <h1>Marinara Pizza</h1>\n            <p> Proident dolor sunt fugiat eiusmod Lorem. Aliquip sint labore dolore non aliquip anim id labore fugiat consectetur. Aliqua in laborum laboris fugiat esse amet nostrud deserunt non pariatur aliquip. Irure velit deserunt ipsum tempor cupidatat enim consectetur aliquip duis laboris consequat.</p>\n            <button className = \"btnbuy\"> Buy! </button>\n        </div>\n    </div>\n    )\n}\nexport default Marinara","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navigation from \"./Navigation/Nav\";\nimport Pizza from \"./Pizza/Pizza\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport Paperoni from \"./Menu Pizza/Paeroni\";\nimport Footer from \"./Footer/Footer\";\nimport Margherita from \"./Menu Pizza/Margherita\";\nimport Marinara from \"./Menu Pizza/Marinara\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navigation></Navigation>\n        <Route exact path=\"/\" component={Pizza} />\n        <Route exact path=\"/paperoni\" component={Paperoni} />\n        <Route exact path=\"/margherita\" component={Margherita}></Route>\n        <Route exact path=\"/marinara\" component={Marinara}></Route>\n        <Footer></Footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}